<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="86b8dd2e-8634-4853-b950-21b58b3ed73f" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/../cron-job/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../cron-job/app.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../cron-job/myScript.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../golang-million/database/database.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../golang-million/queue/queue.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../interview/binarySearch.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../interview/sort.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../interview/swap.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../java/hello/src/Person.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../k6/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../nextjs/src/app/posts/page.jsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../nextjs/src/services/apis.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../pett/backend/.env.backend" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../swagger/routes.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../.idea/rs.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../backup.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/grafana-dashboard.json" beforeDir="false" afterPath="$PROJECT_DIR$/grafana-dashboard.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/prometheus-data/prometheus.yml" beforeDir="false" afterPath="$PROJECT_DIR$/prometheus-data/prometheus.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/prometheus/prometheus.yml" beforeDir="false" afterPath="$PROJECT_DIR$/prometheus/prometheus.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../restore.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../rs.sh" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;rasel-mahmud-dev&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:rasel-mahmud-dev/linux-sh.git&quot;,
    &quot;accountId&quot;: &quot;fc403e33-9c08-44d0-83b8-81da45f6a5cd&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2glT2amXwZnIRxp7nICug1uJTju" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/home/rasel/Desktop/all-projects./k6",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "ts.external.directory.path": "/home/rasel/Desktop/all-projects./node-metrics/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-1d06a55b98c1-2e7d6887c066-JavaScript-WS-241.15989.47" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="86b8dd2e-8634-4853-b950-21b58b3ed73f" name="Changes" comment="" />
      <created>1716270959542</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1716270959542</updated>
      <workItem from="1716270961232" duration="9281000" />
      <workItem from="1716282159957" duration="10053000" />
      <workItem from="1719300191701" duration="3764000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="main" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>